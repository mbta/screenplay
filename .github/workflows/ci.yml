name: CI

on: push

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  asdf:
    name: ASDF
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      # cache the ASDF directory, using the values from .tool-versions
      - name: ASDF cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
        id: asdf-cache
      # only run `asdf install` if we didn't hit the cache
      - uses: asdf-vm/actions/install@v3
        if: steps.asdf-cache.outputs.cache-hit != 'true'

  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      DATABASE_PASSWORD: postgres
      DATABASE_USER: postgres
      DATABASE_NAME: screenplay_test
      DATABASE_HOST: localhost
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: ${{env.DATABASE_PASSWORD}}
          POSTGRES_USER: ${{env.DATABASE_USER}}
          POSTGRES_DB: ${{env.DATABASE_NAME}}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    needs: asdf
    steps:
      - uses: actions/checkout@v4
      - name: ASDF cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
        id: asdf-cache
      - uses: mbta/actions/reshim-asdf@v1
      # The asdf job should have prepared the cache. exit if it didn't for some reason
      - run: exit 1
        if: steps.asdf-cache.outputs.cache-hit != 'true'
      - name: Restore dependencies cache
        id: deps-cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Compile (warnings as errors)
        run: mix compile --force --warnings-as-errors
      - name: Check formatting
        run: mix format --check-formatted
      - name: Credo
        run: mix credo --strict
      - name: Run tests
        run: mix test
      - name: Security checks
        run: mix sobelow --config

      # NPM Build + Test
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"
          cache-dependency-path: "./assets"
      - run: npm --prefix assets ci
      - run: npm --prefix assets run deploy
      - run: npm --prefix assets run check
      - run: npm --prefix assets test

      - uses: mbta/actions/dialyzer@v2
